{% set min_python = "python >=3.8" %}
{% set min_python = "python >=3.8" %}
{% set version = "3.34.1" %}

package:
  name: openmdao
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/o/openmdao/openmdao-{{ version }}.tar.gz
  sha256: 7eb60a360a3c4d0b230542eac0057705621c879462b3089447c5a468b7fa931c

build:
  noarch: python
  number: 0

requirements:
  host:
    - {{ min_python }}
  run:
    - {{ min_python }}

outputs:
  - name: openmdao
    build:
      noarch: python
      script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation
      entry_points:
        - openmdao = openmdao.utils.om:openmdao_cmd
        - reset_notebook = openmdao.devtools.docutils:reset_notebook_cmd
        - run_om_test = openmdao.devtools.run_test:run_test
        - webview = openmdao.utils.webview:webview_argv
        - wingproj = openmdao.devtools.wingproj:run_wing
    requirements:
      host:
        - {{ min_python }}
        - hatchling
        - pip
      run:
        - {{ min_python }}
        - networkx >=2.0
        - numpy <2
        - packaging
        - requests
        - scipy
    test:
      requires:
        - pip
      imports:
        - openmdao
      commands:
        - pip check
        - openmdao --help
        - webview --help
        - wingproj --help

  - name: openmdao-with-doe
    build:
      noarch: python
    requirements:
      host:
        - {{ min_python }}
      run:
        - {{ min_python }}
        - {{ pin_subpackage("openmdao", exact=True) }}
        - pydoe3
    test:
      requires:
        - pip
      imports:
        - openmdao
      commands:
        - pip check
        - openmdao --help
        - webview --help
        - wingproj --help

  - name: openmdao-with-jax
    build:
      noarch: python
    requirements:
      host:
        - {{ min_python }}
      run:
        - {{ min_python }}
        - {{ pin_subpackage("openmdao", exact=True) }}
        - jax >=0.4.0
        - jaxlib >=0.4.0
    test:
      requires:
        - pip
      imports:
        - openmdao
      commands:
        - pip check
        - openmdao --help
        - webview --help
        - wingproj --help

  - name: openmdao-with-notebooks
    build:
      noarch: python
    requirements:
      host:
        - {{ min_python }}
      run:
        - {{ min_python }}
        - {{ pin_subpackage("openmdao", exact=True) }}
        - idna >=3.7
        - ipympl
        - notebook
    test:
      requires:
        - pip
      imports:
        - openmdao
      commands:
        - pip check
        - openmdao --help
        - webview --help
        - wingproj --help

  - name: openmdao-with-visualization
    build:
      noarch: python
    requirements:
      host:
        - {{ min_python }}
      run:
        - {{ min_python }}
        - {{ pin_subpackage("openmdao", exact=True) }}
        - bokeh >=2.4.0
        - colorama
        - matplotlib-base
    test:
      requires:
        - pip
      imports:
        - openmdao
      commands:
        - pip check
        - openmdao --help
        - webview --help
        - wingproj --help

  - name: openmdao-with-all
    build:
      noarch: python
    requirements:
      host:
        - {{ min_python }}
      run:
        - {{ min_python }}
        - {{ pin_subpackage("openmdao", exact=True) }}
        - {{ pin_subpackage("openmdao-with-doe", exact=True) }}
        - {{ pin_subpackage("openmdao-with-jax", exact=True) }}
        - {{ pin_subpackage("openmdao-with-notebooks", exact=True) }}
        - {{ pin_subpackage("openmdao-with-visualization", exact=True) }}
    test:
      files:
        - run_testflo.py
      requires:
        # for pip check
        - pip
        # networkx 3.2 drops py3.8, but `testflo` -> `coverage 5` won't solve there
        - networkx <3.2
        # [test] extra
        - aiounittest
        - num2words
        - numpydoc >=1.1
        - parameterized
        - pycodestyle >=2.4.0
        - pydocstyle >=2.0.0
        - testflo >=1.3.6
        - websockets >8
        # not available on conda-forge
        # - playwright>=1.20
      imports:
        - openmdao
      commands:
        - pip check
        - python run_testflo.py

about:
  home: https://openmdao.org
  license: Apache-2.0
  license_family: Apache
  license_file: LICENSE.txt
  summary: OpenMDAO framework infrastructure
  description: |
    OpenMDAO is an open-source high-performance computing platform
    for systems analysis and multidisciplinary optimization, written in Python. It
    enables you to decompose your models, making them easier to build and maintain,
    while still solving them in a tightly coupled manner with efficient parallel
    numerical methods.
  doc_url: https://openmdao.org/docs
  dev_url: https://github.com/OpenMDAO/OpenMDAO
  doc_source_url: https://github.com/OpenMDAO/OpenMDAO/tree/{{ version }}/openmdao/docs

extra:
  recipe-maintainers:
    - swryan
    - bollwyvl
